- gpython: main in C + AST rewrite hook + changed pyc magic
  -> drop pypy support?
  -> CFFI universally for cpython/pypy?
     (https://cffi.readthedocs.io/en/latest/embedding.html, http://doc.pypy.org/en/latest/embedding.html)
- gpython/golang: str/unicode + b/u
- gimport to import go123 released to pypi
- -> cython

? `for x in chan`	~ `for x := range chan`


- greenlet: study, esp. greenlet to migrate between threads
  -> they can't as long as greenlets share the same C stack -> solution =
  different C stack for different greenlets (either hardcoded size or with -fstack-split)

- gevent scheduler: study

- gpython: pre-install pyximport

  done@t; problem is: if pyximport is installed, it tries to compile modules
  that are already compiled by `setup.py build`.	XXX recheck


? signal -> channel
? sync/atomic
? io/ioutil: readfile, writefile
? io.Pipe

----

"solved"

? errctx (-> directly use go123; see gimport vs go123 on pypi)
  -> better make raise always behave like raise_ in pypi.org/project/pep3134 (exception cause is preserved)


----

? out-out of gevent/gpython ?	XXX what did this mean? -> finer grained
  control when to use/not use gevent (i.e. disable gevent under gpython, use
  gevent under std python, ...)?
